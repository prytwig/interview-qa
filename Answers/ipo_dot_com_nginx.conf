http {
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=1.5r/s;

    server {
        # http请求经过301重定向到https
        listen 80;
        server_name ipo.com;
        return 301 https://$server_name$request_uri;
    }

    server {
        # 域名：ipo.com, 支持https、HTTP/2
        listen 443 ssl http2;
        server_name ipo.com;
        ssl_certificate /etc/nginx/tls/ssl_certificate.pem;
        ssl_certificate_key /etc/nginx/tls/ssl_certificate_key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        # 根据UA进行判断，如果包含关键字 **"Google Bot"**, 反向代理到 server_bot[bot.ipo.com] 去处理
        if ($http_user_agent ~* "Google Bot") {
            proxy_pass http://bot.ipo.com;
            break;
        }

        location ~* ^/api/([^/]+)$ {
            # /api/{name} 路径下需要增加限流设置，只允许每秒1.5个请求，超过限制的请求返回 **http code 429**
            limit_req zone=api_limit burst=5;
            limit_req_status 429;

            # /api/{name} 路径的请求通过**unix sock**发送到本地 **php-fpm**，文件映射 **/www/api/{name}.php**
            fastcgi_pass unix:/var/run/php/php-fpm.sock;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME /www/api/$1.php;
        }

        location /static/ {
            # /static/ 目录下是纯静态文件
            root /var/www/ipo/static;
            expires 1d;
        }

        location / {
            # 其它请求指向目录 **/www/ipo/**, 查找顺序 index.html --> public/index.html --> /api/request
            root /var/www/ipo;
            try_files $uri $uri/ /index.html /public/index.html /api/request;
        }
    }

}
